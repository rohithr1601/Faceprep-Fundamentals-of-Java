Given an array A of positive integers. Find the length of the longest sub-sequence such that elements in the subsequence are consecutive integers, the consecutive numbers can be in any order.



For Sample Input and Output format, go to Sample cases.



Sample Example 1:

Input:
N = 7
2 6 1 9 4 5 3
Output:
6
Explanation:
The consecutive numbers here
are 1, 2, 3, 4, 5, 6. These 6 
numbers form the longest consecutive
subsquence.




Sample Example 2:

Input:
N = 7
1 9 3 10 4 20 2
Output:
4
Explanation:
1, 2, 3, 4 is the longest
consecutive subsequence.




Constraints:

1 <= N <= 10^5

0 <= A[i] <= 10^5



  ++++++++++++++++++++++++++++++++++++++++++++

  import java.util.*;
public class Main 
{
    public static int con(int[] n) 
	{
        if (n == null || n.length == 0)
            return 0;
        Set<Integer> set = new HashSet<>();
        for (int num : n)
            set.add(num);
        int longestStreak = 0;
        for (int num : set) 
		{
            if (!set.contains(num - 1)) 
			{
                int currentNum = num;
                int currentStreak = 1;
                while (set.contains(currentNum + 1)) 
				{
                    currentNum++;
                    currentStreak++;
                }
                longestStreak = Math.max(longestStreak, currentStreak);
            }
        }
        return longestStreak;
    }
    public static void main(String[] args) 
	{
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) 
		{
            a[i] = in.nextInt();
        }
        System.out.println("" + con(a));
    }
}
